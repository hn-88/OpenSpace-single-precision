name: windows-feat-appsi

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # This yml is copied from https://github.com/hn-88/OCVWarp/blob/master/.github/workflows/cmake-nix.yml
  # and modified.
  BUILD_TYPE: Release
  OPENSPACE_VERSION: "feature-applesilicon"
  APPIMAGE_VERSION: "1"
  openSpaceHome: ${{ github.workspace }}/source/OpenSpace
  QT_DIR: C:/Qt/6.2.0/msvc2019_64
  QT6_DIR: C:/Qt/6.2.0/msvc2019_64
  CMAKE_PREFIX_PATH: C:/Qt/6.2.0/msvc2019_64/lib/cmake
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
  
    - name: get openspace code for a particular release
      # https://docs.openspaceproject.com/releases-v0.20/contribute/development/compiling/ubuntu.html
      run: |
        git clone --recursive https://github.com/OpenSpace/OpenSpace $env:openSpaceHome
        cd $env:openSpaceHome
        git checkout "feature/applesilicon" --recurse-submodules
        git submodule update --init --recursive
        mkdir build
        cd build
        
    
    - name: Install dependencies
      # https://github.com/OpenSpace/OpenSpace-Docs/blob/3ddcca71b5ff4700ab1f75c5a961ed07c455cb68/dev/compiling/index.md
      shell: pwsh
      run: |
        # Install QT 6.2.0        
        python -m pip install --upgrade pip
        pip install aqtinstall
        aqt install-qt windows desktop 6.2.0 win64_msvc2019_64 --outputdir C:\Qt

    - name: Install Boost (MSVC 14.3)
      run: choco install boost-msvc-14.3 -y

    - name: Set Boost environment variables
      run: |
        echo "BOOST_ROOT=C:\tools\boost_1_85_0" >> $env:GITHUB_ENV
        echo "BOOST_INCLUDEDIR=C:\tools\boost_1_85_0" >> $env:GITHUB_ENV
        echo "BOOST_LIBRARYDIR=C:\tools\boost_1_85_0\lib64-msvc-14.3" >> $env:GITHUB_ENV

    - name: Patches
      run : |
        Copy-Item -Verbose "windows-patches/cefhost.cpp" "$env:openSpaceHome/modules/webbrowser/src/cefhost.cpp"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cd "$env:openSpaceHome/build"
        cmake -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DASSIMP_BUILD_MINIZIP=1 -DBUILD_TESTS=OFF -DOPENSPACE_HAVE_TESTS=OFF -DSGCT_BUILD_TESTS=OFF $env:openSpaceHome
        # -DCMAKE_CXX_COMPILER=/usr/bin/g++-13 -DCMAKE_C_COMPILER=/usr/bin/gcc-13 -DCMAKE_CXX_STANDARD=20

    - name: Build
      # Build your program with the given configuration
      run: |
        cd $env:openSpaceHome
        cmake --build ./build --config RelWithDebInfo
        # ./deploy.bat
        
 
 
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: OpenSpace-singleprec-zip
        # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: $env:openSpaceHome/bin
      
    
